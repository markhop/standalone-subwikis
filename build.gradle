// A task that executes a command and waits until it is "ready" before proceeding
// http://fbflex.wordpress.com/2013/03/14/gradle-madness-execwait-a-task-that-waits-for-commandline-calls-to-be-ready/
class ExecWait extends DefaultTask {
    String command
    String ready
    String directory
 
    @TaskAction
    def spawnProcess() {
 
        ProcessBuilder builder = new ProcessBuilder(command.split(' '))
        builder.redirectErrorStream(true)
        builder.directory(new File(directory))
        Process process = builder.start()
 
        InputStream stdout = process.getInputStream()
        BufferedReader reader = new BufferedReader(new InputStreamReader(stdout))
 
        def line
        while ((line = reader.readLine()) != null) {
            println line
            if (line.contains(ready)) {
                println "$command is ready"
                break;
            }
        }
    }
}

apply plugin: 'java'
apply plugin: 'maven'

repositories {
    mavenCentral()
}

dependencies {
    runtime "org.fitnesse:fitnesse:${fitnesseVersion}:standalone"
}

task cleanUpLib << {
    delete 'lib'
}

task copyToLib(type: Copy) {
    into "./lib"
    from configurations.runtime
    rename { String fileName ->
         fileName.replaceAll('fitnesse-[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]-standalone.jar', 'fitnesse-standalone.jar')
    }
}

task start(type: ExecWait, dependsOn: [copyToLib]) {
    directory './'
    command 'java -jar lib/fitnesse-standalone.jar -p 8050'
    ready 'Started...'
}
